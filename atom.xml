<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ceasteo is here🥝</title>
  
  <subtitle>document imagine things</subtitle>
  <link href="https://starlike-daydream.github.io/atom.xml" rel="self"/>
  
  <link href="https://starlike-daydream.github.io/"/>
  <updated>2025-03-06T14:34:08.564Z</updated>
  <id>https://starlike-daydream.github.io/</id>
  
  <author>
    <name>Ceasteo🥝</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>刷题记录-03-06</title>
    <link href="https://starlike-daydream.github.io/posts/663f4bbf.html"/>
    <id>https://starlike-daydream.github.io/posts/663f4bbf.html</id>
    <published>2025-03-06T14:23:32.320Z</published>
    <updated>2025-03-06T14:34:08.564Z</updated>
    
    <content type="html"><![CDATA[<p>一篇简单的做题记录</p><p>从模板题找了几个做的最多的题</p><h1>1. 排序</h1><p>题目链接：<a href="https://www.lanqiao.cn/problems/1265/learning/?page=1&amp;first_category_id=1&amp;second_category_id=8&amp;sort=students_count&amp;asc=0">1.排序 - 蓝桥云课</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">input</span>();a=<span class="built_in">sorted</span>(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split())))</span><br><span class="line"><span class="built_in">print</span>(*a) <span class="comment">#直接将列表的元素以空格分隔打印</span></span><br><span class="line"><span class="built_in">print</span>(*a[::-<span class="number">1</span>]) <span class="comment">#排序后的倒序就是逆序</span></span><br></pre></td></tr></table></figure><h1>2. 走迷宫</h1><p>题目链接：<a href="https://www.lanqiao.cn/problems/1216/learning/?page=1&amp;first_category_id=1&amp;second_category_id=8&amp;sort=students_count&amp;asc=0">2.走迷宫 - 蓝桥云课</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># n,m=map(int,input().split())</span></span><br><span class="line"><span class="comment"># g=[list(map(int,input().split())) for i in range(n)]</span></span><br><span class="line"><span class="comment"># flag=[[1]*m for _ in range(n)]</span></span><br><span class="line"><span class="comment"># x1,y1,x2,y2=map(lambda x:int(x)-1,input().split())</span></span><br><span class="line"><span class="comment"># class Node:</span></span><br><span class="line"><span class="comment">#     def __init__(self,x,y,val,cnt):</span></span><br><span class="line"><span class="comment">#         self.x=x</span></span><br><span class="line"><span class="comment">#         self.y=y</span></span><br><span class="line"><span class="comment">#         self.val=val</span></span><br><span class="line"><span class="comment">#         self.cnt=cnt</span></span><br><span class="line"><span class="comment"># q=[Node(x1,y1,g[x1][y1],0)]</span></span><br><span class="line"><span class="comment"># ans=0xfffffffff</span></span><br><span class="line"><span class="comment"># # print(ans)</span></span><br><span class="line"><span class="comment"># while q:</span></span><br><span class="line"><span class="comment">#     node=q[0]</span></span><br><span class="line"><span class="comment">#     # print(node.x,node.y)</span></span><br><span class="line"><span class="comment">#     del q[0]</span></span><br><span class="line"><span class="comment">#     # q.pop(0)</span></span><br><span class="line"><span class="comment">#     if node.x==x2 and node.y==y2:</span></span><br><span class="line"><span class="comment">#         ans=min(node.cnt,ans)</span></span><br><span class="line"><span class="comment">#     for a,b in [[0,1],[0,-1],[-1,0],[1,0]]: #右左下上</span></span><br><span class="line"><span class="comment">#         if 0&lt;=node.y+b&lt;m and 0&lt;=node.x+a&lt;n and g[node.x+a][node.y+b] and flag[node.x+a][node.y+b]:</span></span><br><span class="line"><span class="comment">#             q.append(Node(node.x+a,node.y+b,g[node.x+a][node.y+b],node.cnt+1))</span></span><br><span class="line"><span class="comment">#             flag[node.x+a][node.y+b]=0</span></span><br><span class="line"><span class="comment"># print(-1 if ans==0xfffffffff else ans)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 看了题解后改进自己的</span></span><br><span class="line">n, m = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line">g = [<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">x1, y1, x2, y2 = <span class="built_in">map</span>(<span class="keyword">lambda</span> x: <span class="built_in">int</span>(x) - <span class="number">1</span>, <span class="built_in">input</span>().split())</span><br><span class="line">q = [[x1, y1, <span class="number">0</span>]]</span><br><span class="line"><span class="keyword">while</span> q:</span><br><span class="line">    x, y, cnt = q.pop(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span> x == x2 <span class="keyword">and</span> y == y2:</span><br><span class="line">        <span class="built_in">print</span>(cnt)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">for</span> a, b <span class="keyword">in</span> <span class="built_in">map</span>(<span class="keyword">lambda</span> i:(i[<span class="number">0</span>] + x, i[<span class="number">1</span>] + y),((<span class="number">0</span>, <span class="number">1</span>), (<span class="number">0</span>, -<span class="number">1</span>), (-<span class="number">1</span>, <span class="number">0</span>), (<span class="number">1</span>, <span class="number">0</span>))):  <span class="comment"># 右左下上</span></span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> &lt;= a &lt; n <span class="keyword">and</span> <span class="number">0</span> &lt;= b &lt; m <span class="keyword">and</span> g[a][b]:</span><br><span class="line">            q.append((a, b, cnt + <span class="number">1</span>))</span><br><span class="line">            g[a][b] = <span class="number">0</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(-<span class="number">1</span>)</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">结合地图进行dfs，一开始起点进队列，队列不为空时进行循环，每次循环，队列首出队列，然后往上下左右四个方向走，超过地图大小或是阻碍或走过了就不入队列，原本用的class用inf记录步数，后来看题解：</span></span><br><span class="line"><span class="string">可以用三元组，一开始头节点的出队列可以直接用pop(0)接收，再分给三个变量记录，最后走到了终点直接输出break否则输出-1</span></span><br><span class="line"><span class="string">当然，最妙的在于走过的直接赋值地图的值为0表示走过了，这样就不用再走了，也不用开标志数组了，与原来地图的阻碍同义</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h1>3. 小明的背包1</h1><p>题目链接：<a href="https://www.lanqiao.cn/problems/1174/learning/?page=1&amp;first_category_id=1&amp;second_category_id=8&amp;sort=students_count&amp;asc=0">3.小明的背包1 - 蓝桥云课</a></p><p>知识来源的B站链接：</p><p><a href="https://www.bilibili.com/video/BV1cg411g7Y6">带你学透0-1背包问题！| 关于背包问题，你不清楚的地方，这里都讲了！| 动态规划经典问题 | 数据结构与算法_哔哩哔哩_bilibili</a></p><p><a href="https://www.bilibili.com/video/BV1BU4y177kY">带你学透01背包问题（滚动数组篇） | 从此对背包问题不再迷茫！_哔哩哔哩_bilibili</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自己看B站代码随想录后理解得到的代码</span></span><br><span class="line"><span class="comment"># n, c = map(int, input().split())</span></span><br><span class="line"><span class="comment"># dp = [[0] * (c + 1) for i in range(n)]  # 0~i个物品选取任意个物品背包容量为j所能达到最大价值</span></span><br><span class="line"><span class="comment"># for i in range(n):  # 0-n个物品</span></span><br><span class="line"><span class="comment">#     w, v = map(int, input().split())</span></span><br><span class="line"><span class="comment">#     if i == 0:  # 第一行初始化</span></span><br><span class="line"><span class="comment">#         for j in range(c + 1):</span></span><br><span class="line"><span class="comment">#             if j &gt;= w:</span></span><br><span class="line"><span class="comment">#                 dp[i][j] = v</span></span><br><span class="line"><span class="comment">#     else:</span></span><br><span class="line"><span class="comment">#         for j in range(c + 1):  # 不同背包容量</span></span><br><span class="line"><span class="comment">#             if j &gt;= w:  # 容量更大才能放</span></span><br><span class="line"><span class="comment">#                 dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - w] + v)  # 不放价值更多还是放（背包容量减少w，价值+v）价值更多</span></span><br><span class="line"><span class="comment">#             else:</span></span><br><span class="line"><span class="comment">#                 dp[i][j] = dp[i - 1][j]</span></span><br><span class="line"><span class="comment"># print(dp[n - 1][c])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.看题解的改进，如果多开一行就不怕数组越界了，从而不用第一行的初始化，直接进行判断</span></span><br><span class="line"><span class="comment"># 2.背包够不够放这个物品的判断可以写道背包容量的循环范围里---&gt;错错错！！！！ 那是一维滚动数组，二维不可用</span></span><br><span class="line"><span class="comment"># n, c = map(int, input().split()) #物品个数和背包容量</span></span><br><span class="line"><span class="comment"># dp = [[0] * (c + 1) for i in range(n+1)]  # 1~i（最大为n）个物品选取任意个物品背包容量为j(最大为c)所能达到最大价值</span></span><br><span class="line"><span class="comment"># for i in range(1,n+1):  # 1~n个物品</span></span><br><span class="line"><span class="comment">#     w, v = map(int, input().split()) #这个物品的</span></span><br><span class="line"><span class="comment">#     for j in range(c + 1):  # 不同背包容量下物品的选择</span></span><br><span class="line"><span class="comment">#         if j&gt;=w: #物品放得下</span></span><br><span class="line"><span class="comment">#             dp[i][j] =  max(dp[i - 1][j],dp[i - 1][j - w] + v)  # 这个物品不放（背包容量不变，物品还是前i-1个物品）价值更多还是放（背包容量减少w，价值+v）价值更多</span></span><br><span class="line"><span class="comment">#         else:</span></span><br><span class="line"><span class="comment">#             dp[i][j]=dp[i-1][j] #物品放不下，还是这个物品不放时的价值</span></span><br><span class="line"><span class="comment"># print(dp[n][c])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(list(range(2,5,-1)))</span></span><br><span class="line"><span class="comment"># 一维滚动dp：利用把本层的数组作为上一层来看待压缩，左上角-&gt;左边的值（二维-&gt;一维）保证每个物品只取一次，只有逆序才保证左上角的值不会改变</span></span><br><span class="line">n, c = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())  <span class="comment"># 物品个数和背包容量</span></span><br><span class="line">dp = [<span class="number">0</span>] * (c + <span class="number">1</span>)  <span class="comment"># 1~i（最大为n）个物品选取任意个物品背包容量为j(最大为c)所能达到最大价值</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n + <span class="number">1</span>):  <span class="comment"># 1~n个物品</span></span><br><span class="line">    w, v = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())  <span class="comment"># 这个物品的</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(c, w - <span class="number">1</span>, -<span class="number">1</span>):  <span class="comment"># 不同背包容量下物品的选择</span></span><br><span class="line">        dp[j] = <span class="built_in">max</span>(dp[j], dp[j - w] + v)  <span class="comment"># 这个物品不放（背包容量不变，物品还是前i-1个物品）价值更多还是放（背包容量减少w，价值+v）价值更多</span></span><br><span class="line"><span class="built_in">print</span>(dp[c])</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一篇简单的做题记录&lt;/p&gt;
&lt;p&gt;从模板题找了几个做的最多的题&lt;/p&gt;
&lt;h1&gt;1. 排序&lt;/h1&gt;
&lt;p&gt;题目链接：&lt;a href=&quot;https://www.lanqiao.cn/problems/1265/learning/?page=1&amp;amp;first_categ</summary>
      
    
    
    
    <category term="Computer Learning" scheme="https://starlike-daydream.github.io/categories/Computer-Learning/"/>
    
    
    <category term="Algorithm" scheme="https://starlike-daydream.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb开发流程简介</title>
    <link href="https://starlike-daydream.github.io/posts/d79be163.html"/>
    <id>https://starlike-daydream.github.io/posts/d79be163.html</id>
    <published>2024-05-20T12:05:04.931Z</published>
    <updated>2024-05-28T14:34:05.857Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Web:全球广域网，也称万维网（www：World Wide Web），能够通过浏览器访问的网站。（如淘宝，京东这样的电商系统，或是企业内部的管理系统）</li></ul><h2 id="web网站工作流程：">web网站工作流程：</h2><ul><li><p>在浏览器里输入域名，一敲回车，怎么就能访问到页面了呢？</p><ul><li>浏览器是一个程序，京东网站也是一个程序，不过它在京东的电脑上运行着，我们只是通过浏览器远程访问而已</li></ul></li></ul><h1>而京东的程序，大体由三个部分组成：</h1><ul><li><p>1.所看到的网页程序（也成为前端程序），主要负责将数据以好看的样式呈现出来，它运行在前端服务器当中</p></li><li><p>2.数据库程序（也是数据库服务器），负责管理和存储数据，前端只是将这些数据展示出来</p></li><li><p>3.后端程序（Java编写的程序），运行在后端服务器，主要负责数据的逻辑处理</p></li></ul><h1>具体流程：</h1><ul><li><p>1.首先，用户在浏览器地址栏输入域名之后，一敲回车，那么此时浏览器就会根据请求的域名请求对应的前端服务器（请求）</p></li><li><p>2.前端服务器接收到请求之后，会把对应的前端代码返回给浏览器，浏览器程序里面内置的前端代码的解析引擎，其接收到前端代码后，会自动解析前端的代码，从而展现出对应的页面样式（响应）</p></li></ul><p><img src="https://api2.mubu.com/v3/document_image/6eb50687-051d-45a5-85d2-dad3b1593621-8085313.jpg" alt=""></p><ul><li><p>浏览器解析前端代码，会有一些网页结构，未获取数据时，网页只有空架子，没有数据</p></li><li><p>如图<img src="https://api2.mubu.com/v3/document_image/d3e0f815-5e47-4ede-ad60-661ec210be80-8085313.jpg" alt=""></p></li><li><p>在前端代码中，都会指定去哪获取数据</p></li><li><p>这里划线的代码就是在获取数据<img src="https://api2.mubu.com/v3/document_image/bd5329f3-9f59-40e2-9f66-4b0e628c4080-8085313.jpg" alt=""></p></li><li><p>3.当浏览器解析到前端代码当中的这个数据获取路径以后，浏览器就会拿着这个路径去访问部署在后端服务器中的后端java程序（请求）</p></li><li><p>4.后端程序继续访问数据库（请求）</p></li><li><p>5.后端服务器获取到数据库服务器的数据（响应）</p></li><li><p>6.后端服务器将数据返回给浏览器（响应）</p></li><li><p>7.此时前端代码和数据都有了，浏览器就会将数据填充在刚才的空架子的前端页面当中，从而形成看这样一个完整的页面呈现给用户<br><img src="https://api2.mubu.com/v3/document_image/27e9f320-ca34-47e8-90fa-bba2798e6b86-8085313.jpg" alt=""></p></li><li><p>这就是web网站整体的工作流程<br><img src="https://api2.mubu.com/v3/document_image/134154fc-44e8-418e-9878-8be15f4396a8-8085313.jpg" alt=""></p></li></ul><h1>网站的开发模式：</h1><h2 id="现在这种开发模式特点是：">现在这种开发模式特点是：</h2><ul><li><p>前端人员开发前端程序，然后将开发完成的前端程序放在前端服务器上运行</p></li><li><p>Java开发工程师负责开发后端Java程序，然后将开发完成的后端Java程序放在后端服务器上运行</p></li><li><p>前端程序和后端程序的开发和部署都是分开的，这种开发模式称为前后端分离开发<br><img src="https://api2.mubu.com/v3/document_image/39dd34f6-925d-4b26-869f-9f01165b8a64-8085313.jpg" alt=""></p></li></ul><h2 id="早期还有一种开发模式：">早期还有一种开发模式：</h2><ul><li><p>将前端程序和后端程序混合在一起进行开发，最终前后端程序都在一台服务器上运行</p></li><li><p>浏览器发起请求到服务器后，服务器会将数据以及前端代码一并返回给浏览器</p></li><li><p>图示</p><ul><li><p>1<img src="https://api2.mubu.com/v3/document_image/a7abda09-9d40-42ce-a95b-44235731da81-8085313.jpg" alt=""></p></li><li><p>2<img src="https://api2.mubu.com/v3/document_image/8256c3d8-6408-44f7-967a-d4ef85eac9d6-8085313.jpg" alt=""></p></li></ul></li><li><p>浏览器再来进行解析和展示</p></li><li><p>这种开发模式中，前端程序和后端程序的开发和部署都是混合在一起的，这种方式我们称之为混合开发<br><img src="https://api2.mubu.com/v3/document_image/09811515-bdfd-4468-8ef1-fb6c247d4aed-8085313.jpg" alt=""></p></li><li><p>现在市场主流开发模式是前后端分离模式</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;Web:全球广域网，也称万维网（www：World Wide Web），能够通过浏览器访问的网站。（如淘宝，京东这样的电商系统，或是企业内部的管理系统）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;web网站工作流程：&quot;&gt;web网站工作流程：&lt;/h2&gt;
&lt;ul&gt;
&lt;l</summary>
      
    
    
    
    <category term="Computer Learning" scheme="https://starlike-daydream.github.io/categories/Computer-Learning/"/>
    
    
    <category term="JavaWeb" scheme="https://starlike-daydream.github.io/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>Git的基本操作</title>
    <link href="https://starlike-daydream.github.io/posts/189553d2.html"/>
    <id>https://starlike-daydream.github.io/posts/189553d2.html</id>
    <published>2024-05-20T11:24:57.865Z</published>
    <updated>2024-05-28T14:34:12.120Z</updated>
    
    <content type="html"><![CDATA[<h1>git的初始化操作</h1><ul><li><p>安装好git后：<code>git version</code>查看git版本，检测是否安装成功</p></li><li><p>一些dos命令：<code>pwd</code>–显示当前目录 <code>ls</code>–显示当前目录下的文件 <code>cd ..</code>–回退上一级目录 <code>cd directory</code>–切换目录 <code>clear</code>–清除历史记录</p></li><li><p><code>git config --global user.name [&quot; &quot;]</code>：查看[设置]用户名</p></li><li><p><code>git config --global user.email [&quot; &quot;]</code>：查看[设置]用户邮箱</p></li><li><p><code>git init</code>：在当前目录初始化一个仓库</p></li></ul><h1>git的提交操作</h1><ul><li><p><code>git add 文件名</code>：把文件上传到暂存区</p></li><li><p><code>git add .</code>：（一般就用这个）上传当前目录所有文件到暂存区</p></li><li><p><code>git add *</code>：上传当前目录全部非隐藏文件到暂存区</p></li><li><p><code>git add .*</code>：上传当前目录全部隐藏文件到暂存区</p></li><li><p><code>git commit</code>：把当前保存的文件提交固定成一个版本</p><ul><li><p>试一下会vim的终端编辑器写提交说明（备注）（我咋没有，我点了vs右上角加号才推出）</p></li><li><p>按i/a进入编辑模式，写好后按Esc退出编辑模式，按下英文冒号:，输入wq回车，保存退出</p></li></ul></li><li><p>git都是按行来对比文件不同的，就两种情况：新增，删除（如果是同一行的修改，那就是同时删除一行，新增一行）</p></li><li><p><code>git log</code>：查看提交信息（日志），每次提交都会记录日志信息</p><ul><li><p>提交格式：commit之后一大串随机id作为唯一标识，author是作者（是所设置的用户名和邮箱），在下面就是刚刚写的提交说明<img src="https://api2.mubu.com/v3/document_image/e9dac96c-11df-4465-9dba-ad9ad50d6741-8085313.jpg" alt=""></p></li><li><p>当commit（提交）比较多，git log 的内容在一页显示不完整，满屏放不下的时候，就会显示冒号。</p></li><li><p>回车（往下滚一行）、空格（往下滚一页）可以继续查看剩余内容。</p></li><li><p>退出：英文状态下 按 q 可以退出git log 状态</p></li></ul></li><li><p>VSCode提示：新增文件显示绿色，修改文件显示橙色M（Modified），以示和上次提交的数据不一样</p></li><li><p><code>git commit -m &quot;&quot;</code>：写提交说明的简化版操作，这样会跳过vim编辑，大部分人会用这种方式写提交说明</p><ul><li><p><code>git commit -m &quot;fix(test):change content&quot;</code>：一种提交说明风格规范，不是硬性要求，为了让别人一目了然你的修改内容（修复(文件)：修复了……（改变内容））</p></li><li><p>如果要参与一个国际项目，一个规范的提交信息和英文是必要的，其他的规范词可以搜索git commit规范词自行了解，自己项目能看懂就行</p></li></ul></li><li><p>vscode页面化操作，作出修改，点击左边的git菜单，点击文件就能对比修改的内容，点击上方√号，就能提交，提示没有暂存的更改，是否暂存更改，点是就能执行git add .和git commit 了，再在上面输入commit说明按下回车就commit完成了</p></li><li><p>vscode自带git所有基本操作，高级操作需安装git history diff插件查看所有历史记录</p></li></ul><h1>git的版本控制操作</h1><ul><li><p><code>git reset --hard 提交id</code>：回退到历史提交状态，会清空历史记录</p><ul><li><p>reset是重置的意思</p></li><li><p>–hard是重置模式：hard表示硬重置，即覆盖所有变更</p></li><li><p>另外还有soft模式和默认的mixed模式</p></li></ul></li><li><p>但是只是想要切换版本该怎么办呢，这时候就可以用分支branch，顾名思义，分支就是把当前版本复制一份当作新的版本分支</p></li><li><p><code>git branch 分支名</code>：就可以当前版本创建一个分支</p></li><li><p><code>git branch -a</code>：查看当前已有的分支，master是主分支。</p></li><li><p><code>git checkout 分支名</code>：切换到新的分支</p></li><li><p>你可以在主分支上和分支上写代码，然后某一天把这两个分支用git merge合在一起，一个人用处不大，但在团队协作用处就大了，一个团队开发的项目离不开分支</p></li><li><p>比如说：一个项目现有1.0版本，但要1.1版本要新增五个功能，就让五个成员分别去写这五个功能：让他们新建一个分支去，分别去开发这五个功能，最后开发好了再合并起来（git merge），再提交并使用git tag（tag命令创建固定版本）打标签生成1.1版本，团队开发互不影响，但又可以同时协作</p></li><li><p>形象的解释：文档1.0复制给5个人去增加5个新功能（branch），然后再把他们各自写好的功能收上来，复制粘贴他们各自写得功能（merge），最终形成1.1版本并保存（commit，tag）</p><ul><li><img src="https://api2.mubu.com/v3/document_image/a5209ad2-6668-4d6a-9f12-514ad9cb2f7e-8085313.jpg" alt=""></li></ul></li></ul><h1>远程仓库</h1><ul><li><p>团队协作肯定不能在同一台电脑上，最好在一个服务器上，这个服务器可以自己搭建，但是还是公用的省事：github/gitee（简单来说就是可以git操作的网盘）</p></li><li><p>github上new了一个repositoty,之后会有些教程，上传提交之后，</p><ul><li><p>1.<code>git branch -M main</code>:创建主分支并把主分支切换为main</p></li><li><p>2.<code>git remote add origin 仓库url(你的仓库链接)</code>:添加一个远程仓库地址(相当于给这个git项目设置一个网盘地址,让它知道上传到哪里)</p></li><li><p>3.<code>git push -u origin main</code>:push也就是上传到github,之后要登陆一下github(push后面的参数是push源和分支)</p></li><li><p>我的代码出问题了,好像要git pull --rebase origin main ,再git push -u origin main,好像是仓库不一致导致的</p></li><li><p>之后刷新网页就可以发现上传成功啦</p></li><li><p>图片</p><ul><li><img src="https://api2.mubu.com/v3/document_image/0a2849ea-5067-45cc-baad-b80dc381c036-8085313.jpg" alt=""></li></ul></li><li><p><code>git remote -v</code>:查看已建立的连接</p></li><li><p><code>git remote remove origin</code>:取消当前的远程连接</p></li></ul></li></ul><h1>参与开源项目</h1><ul><li><p>来到别人的项目,点击右上角的fork:把别人的代码库复制到我的账号了,类似branch,右上角点开自己的仓库就会发现已经复制下来了</p></li><li><p>点击code,复制仓库的http链接</p></li><li><p>在电脑上新建文件夹,打开终端,然后输入:<code>git clone 你的仓库链接</code> .(把网盘上的仓库克隆到本地电脑)</p></li><li><p>查看建立连接发现连接的是自己的,使用命令</p></li><li><p><code>git clone add upstream 别人的仓库链接</code>:添加上游命令,再remote -v看一下就有了</p></li><li><p>使用<code>git checkout -b kwc</code>来创建并切换进入kwc的分支</p></li><li><p>之后创建文件夹,创建文件,写入文件内容,add .,commit -m “add(number):康文昌”,push -u origin kwc,回到自己的仓库,就发现已经有这个分支了</p></li><li><p>这时候就来re01的仓库,点pull request:拉取请求,简称PR,进去之后点new,新建pr,这里base就是根源,选择re01的main分支,compare就是比较,选择自己刚刚创建的分支,选择后如果显示绿色对号able to merge就是可以合并的意思,那就填写pr信息:标题,内容,下面点击create创建pr,就提交成功了,这就代表参与了开源项目</p></li><li><p>如果没有显示对号,那就代表up提交了新的commit,导致版本不一致,这时就需要更新本地版本,</p></li><li><p><code>git fetch upstream</code>:从上游更新最新代码</p></li><li><p>然后执行:<code>git merge upstream/main</code>,把远程的最新代码合并到自己的分支中,再<code>git push</code>就好了</p></li></ul><h1>问题记录</h1><ul><li><p>ssh连接除了好几次错误：先是22端口拒绝连接，然后我去搜，最后发现电脑只有ssh客户端，没有ssh服务器，然后下了似乎又说真实性，yes/no什么的，这里又搜了一下，是要输yes，我的443端口没问题，不是防火墙的原因，好像少了一个kown_hosts文件</p></li><li><p>类似下图的错误，反正yes着yes着的、差不多就好了<img src="https://api2.mubu.com/v3/document_image/dfd0e086-ad97-40e6-99d8-638d6a486aab-8085313.jpg" alt=""></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;git的初始化操作&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;安装好git后：&lt;code&gt;git version&lt;/code&gt;查看git版本，检测是否安装成功&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一些dos命令：&lt;code&gt;pwd&lt;/code&gt;–显示当前目录 &lt;code&gt;ls&lt;</summary>
      
    
    
    
    <category term="Computer Learning" scheme="https://starlike-daydream.github.io/categories/Computer-Learning/"/>
    
    
    <category term="git" scheme="https://starlike-daydream.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb笔记汇总</title>
    <link href="https://starlike-daydream.github.io/posts/83713ae4.html"/>
    <id>https://starlike-daydream.github.io/posts/83713ae4.html</id>
    <published>2024-05-09T12:36:05.447Z</published>
    <updated>2024-05-28T14:53:07.649Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>导学：<a href="https://www.mubu.com/doc/9D7QFzbSrx">https://www.mubu.com/doc/9D7QFzbSrx</a></p></li><li><p>Day01–Web开发介绍、HTML：<a href="https://www.mubu.com/doc/5xfzExFbCrx">https://www.mubu.com/doc/5xfzExFbCrx</a></p></li><li><p>Day1-下–HTML：<a href="https://www.mubu.com/doc/31lAkadiHx">https://www.mubu.com/doc/31lAkadiHx</a></p></li><li><p>Day02–JS：<a href="https://www.mubu.com/doc/1mR_eBGK1Hx">https://www.mubu.com/doc/1mR_eBGK1Hx</a></p></li><li><p>Day02-下–JS、Vue：<a href="https://www.mubu.com/doc/5YH_n9h1sHx">https://www.mubu.com/doc/5YH_n9h1sHx</a></p></li><li><p>Day03–Ajax、前端工程化、Element，Vue路由：<a href="https://www.mubu.com/doc/2Muu30u7gXx">https://www.mubu.com/doc/2Muu30u7gXx</a></p></li><li><p>Day04–Maven、SpringBoot快速入门、HTTP协议：<a href="https://www.mubu.com/doc/2NhS9ewAr-a">https://www.mubu.com/doc/2NhS9ewAr-a</a></p></li><li><p>Day04-下-HTTP协议、Tomcat：<a href="https://www.mubu.com/doc/3OR44YsEwbx">https://www.mubu.com/doc/3OR44YsEwbx</a></p></li><li><p>Day05–请求响应（Postman）：<a href="https://www.mubu.com/doc/59n5m8hyubx">https://www.mubu.com/doc/59n5m8hyubx</a></p></li><li><p>Day06MySQL（DDL、DML、DQL）：<a href="https://www.mubu.com/doc/11VBTUMOSbx">https://www.mubu.com/doc/11VBTUMOSbx</a></p></li><li><p>Day07–MySQL（DQL、多表设计）：<a href="https://www.mubu.com/doc/2uCH62UKkbx">https://www.mubu.com/doc/2uCH62UKkbx</a></p></li><li><p>Day08（多表查询、事务、索引、MyBatis入门）：<a href="https://www.mubu.com/doc/4GZaM2GO_L8">https://www.mubu.com/doc/4GZaM2GO_L8</a></p></li><li><p>Day09–Mybatis：<a href="https://www.mubu.com/doc/3sKPDNVO0rx">https://www.mubu.com/doc/3sKPDNVO0rx</a></p></li><li><p>Web前端课堂笔记：<a href="https://www.mubu.com/doc/12BkDzFoprx">https://www.mubu.com/doc/12BkDzFoprx</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;导学：&lt;a href=&quot;https://www.mubu.com/doc/9D7QFzbSrx&quot;&gt;https://www.mubu.com/doc/9D7QFzbSrx&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Day01–Web开发介绍、HTML：&lt;</summary>
      
    
    
    
    <category term="Computer Learning" scheme="https://starlike-daydream.github.io/categories/Computer-Learning/"/>
    
    
    <category term="Java" scheme="https://starlike-daydream.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java笔记汇总</title>
    <link href="https://starlike-daydream.github.io/posts/4a6618d2.html"/>
    <id>https://starlike-daydream.github.io/posts/4a6618d2.html</id>
    <published>2024-05-09T12:28:07.432Z</published>
    <updated>2024-05-28T14:42:12.775Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>Day01–jdk,IDEA,Java基本注意事项:<a href="https://mubucm.com/doc/3dywhNGc">https://mubucm.com/doc/3dywhNGc</a></p></li><li><p>Day02–变量,数据类型,运算符简介,类型转换: <a href="https://mubucm.com/doc/206pVYETmq">https://mubucm.com/doc/206pVYETmq</a></p></li><li><p>Day03–包的简介,运算符,方法:<a href="https://mubucm.com/doc/2oC3C9xgLb8">https://mubucm.com/doc/2oC3C9xgLb8</a></p></li><li><p>Day04–流程控制语句,随机数类:<a href="https://mubucm.com/doc/uO_ArhpO1">https://mubucm.com/doc/uO_ArhpO1</a></p></li><li><p>Day05–数组,Java内存图:<a href="https://mubucm.com/doc/eGI7U433M">https://mubucm.com/doc/eGI7U433M</a></p></li><li><p>Day06–基础知识案例题:<a href="https://mubucm.com/doc/3gRs9_GXvo">https://mubucm.com/doc/3gRs9_GXvo</a></p></li><li><p>Day07–面向对象基础:<a href="https://mubucm.com/doc/1gkISLKCw9w">https://mubucm.com/doc/1gkISLKCw9w</a></p></li><li><p>Day08–String和StringBuilder:<a href="https://mubucm.com/doc/1KDxRlPnBUm">https://mubucm.com/doc/1KDxRlPnBUm</a></p></li><li><p>Day09–集合基础,ArrayList,学生管理系统准备工作:<a href="https://mubucm.com/doc/2gguZiuR8C">https://mubucm.com/doc/2gguZiuR8C</a></p></li><li><p>进阶篇Day01–面向对象进阶:<a href="https://mubucm.com/doc/0Ky5rzKKU66">https://mubucm.com/doc/0Ky5rzKKU66</a></p></li><li><p>进阶篇Day02–包,抽象类,接口,多态:<a href="https://mubucm.com/doc/190dfIkARo-">https://mubucm.com/doc/190dfIkARo-</a></p></li><li><p>进阶篇Day03–lamda表达式，内部类:<a href="https://mubucm.com/doc/2ft6Gl7KA">https://mubucm.com/doc/2ft6Gl7KA</a></p></li><li><p>进阶篇Day05–API简介,Object,Math,System,BigDecimal类,:<a href="https://mubucm.com/doc/4yl2WhSX-2e">https://mubucm.com/doc/4yl2WhSX-2e</a></p></li><li><p>进阶篇Day06–Arrays,冒泡排序,选择排序,二分查找,正则表达式:<a href="https://mubucm.com/doc/4D8k95Su8rs">https://mubucm.com/doc/4D8k95Su8rs</a></p></li><li><p>进阶篇Day07–时间类API:<a href="https://mubucm.com/doc/mkalzCQNw">https://mubucm.com/doc/mkalzCQNw</a></p></li><li><p>进阶篇Day08–递归和异常:<a href="https://mubucm.com/doc/09fz6-0Q4bs">https://mubucm.com/doc/09fz6-0Q4bs</a></p></li><li><p>进阶篇Day09–Collection集合体系/遍历及List接口和ArrayList实现类,部分数据结构简介:<a href="https://mubucm.com/doc/1nGddc67Rma">https://mubucm.com/doc/1nGddc67Rma</a></p></li><li><p>进阶篇Day10:泛型、红黑树：<a href="https://www.mubu.com/doc/5RV427aFzXx">https://www.mubu.com/doc/5RV427aFzXx</a></p></li><li><p>进阶篇Day11–HashSet集合、LinkedHashSet-Collections工具类、Map集合：<a href="https://www.mubu.com/doc/5DqstDS2iex">https://www.mubu.com/doc/5DqstDS2iex</a></p></li><li><p>进阶篇Day12–Stream流、File流：<a href="https://www.mubu.com/doc/6hurbUkzXKx">https://www.mubu.com/doc/6hurbUkzXKx</a></p></li><li><p>本课程尚未更新完，笔记后续会完善，但对于刷题的语言基础，一部分知识已然够用</p></li><li><p>课程链接:【2023新版Java视频教程，一套超哇塞的Java教程，java零基础自学入门必看黑马java教程-哔哩哔哩】 <a href="https://b23.tv/w9JQPxi">https://b23.tv/w9JQPxi</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Day01–jdk,IDEA,Java基本注意事项:&lt;a href=&quot;https://mubucm.com/doc/3dywhNGc&quot;&gt;https://mubucm.com/doc/3dywhNGc&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Day02</summary>
      
    
    
    
    <category term="Computer Learning" scheme="https://starlike-daydream.github.io/categories/Computer-Learning/"/>
    
    
    <category term="Java" scheme="https://starlike-daydream.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Vim使用教程</title>
    <link href="https://starlike-daydream.github.io/posts/98e6bd54.html"/>
    <id>https://starlike-daydream.github.io/posts/98e6bd54.html</id>
    <published>2024-04-27T06:29:26.606Z</published>
    <updated>2024-10-03T08:58:48.259Z</updated>
    
    <content type="html"><![CDATA[<h1>Vim简介</h1><ul><li>Vim是什么？<ul><li>Vim可以是一个文本编辑器，但更是一个代码编辑器，甚至可以是一个IDE</li></ul></li><li>为什么要使用Vim？<ul><li>俗话说的好，“工欲善其事，必先利其器”，身为整日整夜撸代码的程序员，拥有强大高效的的编辑器是必不可少的</li><li>然而Vim的使用一开始让人感到不适，这需要一段时间练习并熟悉最终形成肌肉记忆，Vim的技巧可以非常高深，身为小白的我只会分享一点我常用的用法</li></ul></li></ul><h1>Vim的安装</h1><ul><li>安装Vim编辑器</li><li>Visual Stdio Code安装Vim插件</li><li>JetBrains系列产品安装Vim插件</li></ul><h1>Vim的基本操作</h1><ul><li>Vim的三种模式<ul><li>编辑模式</li><li>可选模式：按v进入可选模式</li><li>普通模式：按Ctrl+C/Ctrl+[ / Esc 从任意模式下回到普通模式</li><li>![[Pasted image 20240614215022.png]]</li></ul></li><li>阅读相关操作<ul><li>显示/关闭显示行号：set nu（number）/set nonu（nonumber）</li><li>光标跳跃<ul><li>上下左右移动：j k h l/方向键</li><li>![[Pasted image 20240614214821.png]]</li><li>跳到上/下一个单词开头：W w</li><li><h2 id="跳到下一个单词末尾：e">跳到下一个单词末尾：e</h2></li><li>跳到行首/行尾：0、$</li><li>跳到非空格行首：^</li><li>跳到文件最开始：gg</li><li>跳到文件最末尾：G</li><li>B b</li><li>跳到上/下一段：{ }</li><li>括号匹配：%</li><li>跳到指定行：:行号-&gt;回车，行号+G</li><li>Ctrl+f（forword）：向前翻页</li><li>Ctrl+b（backword）：向后翻页</li><li>Ctrl+u（up）：向前翻半页</li><li>Ctrl+d（down）：向后翻半页</li><li>![[Pasted image 20240614214619.png]]</li></ul></li><li>搜索：普通模式下按/（向下查找），?（向上查找）<ul><li>高亮显示搜索结果：hls</li><li>取消高亮显示：nohls</li><li>在查找末尾+\c：不区分大小写</li><li>set ic（ignore case）</li></ul></li><li>行内搜索字母：（F）f （反向）要搜索的字母</li></ul></li><li>写入相关操作<ul><li>进入编辑模式：a（光标后面添加append），A（行尾添加），I（行首添加），i（光标前面添加insert），o（在下一行插入），O（在上一行插入）<ul><li>想在某个地方下面加东西，我就会o一下</li><li>![[Pasted image 20240614214920.png]]</li></ul></li><li>复制与粘贴：y，p</li><li>复制一行yy</li><li>:4,7&gt;</li></ul></li><li>删除相关操作<ul><li>x：删除光标所在的字符</li><li>删除：d<ul><li>删除一行：dd</li><li>删除后按p即可复制![[Pasted image 20240614214745.png]]</li></ul></li><li>删除直到：dt</li><li>删除并进入编辑模式：c<ul><li>像我有个变量名写错了啊，就会cw修改一个单词</li></ul></li></ul></li><li>修改相关操作<ul><li>r：修改光标所在的字符</li><li>进入命令模式（:）：（范围选择：（当前行可以省略为空）/开始行号，结束行号/%【全文，1,$也可以】）s/被替换的旧文本/替换的新文本（替换范围  是否询问]）<ul><li>加/g（global全局）：替换所有匹配的内容，不加g的话只会匹配每行第一个内容</li></ul></li><li>u：撤销</li></ul></li><li>其他操作<ul><li>.：重复上一次的操作</li><li>Ctrl+shift+G：进入底行模式</li></ul></li><li>n+操作<ul><li>2yy：复制两行</li><li>3p：复制三次</li><li>100p：复制100次</li></ul></li><li>.vimrc：配置文件<ul><li>显示行号</li></ul></li></ul><h1>VSCode的Vim配置</h1><ul><li>进行绑定按键</li><li>设置非Vim接管按键</li><li>同步剪贴板</li></ul><h1>推荐的Vim学习网站</h1><ul><li>1.Vim自带学习教程：安装vim后输入vimtutor进入官方教程</li><li>2.网站推荐<ul><li><a href="https://gitlab.com/wsdjeg/vim-galore-zh_cn">Eric Wong / Vim 从入门到精通 · GitLab</a></li><li><a href="https://imageslr.com/2021/vim.html">💻【Linux】Vim 入门笔记 (imageslr.com)</a></li><li><a href="https://gitlab.com/wsdjeg/Learn-Vim_zh_cn">Eric Wong / Learn Vim Zh Cn · GitLab</a></li><li><a href="https://www.runoob.com/linux/linux-vim.html">Linux vi/vim | 菜鸟教程 (runoob.com)</a></li><li><a href="https://www.runoob.com/w3cnote/all-vim-cheatsheat.html">史上最全Vim快捷键键位图（入门到进阶） | 菜鸟教程 (runoob.com)</a></li></ul></li><li>3.VSCode插件：Vim Learn</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;Vim简介&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Vim是什么？
&lt;ul&gt;
&lt;li&gt;Vim可以是一个文本编辑器，但更是一个代码编辑器，甚至可以是一个IDE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;为什么要使用Vim？
&lt;ul&gt;
&lt;li&gt;俗话说的好，“工欲善其事，必先利其器”，身为</summary>
      
    
    
    
    <category term="Computer Learning" scheme="https://starlike-daydream.github.io/categories/Computer-Learning/"/>
    
    
    <category term="Vim" scheme="https://starlike-daydream.github.io/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>2024年4月15日-2024年4月21日周报</title>
    <link href="https://starlike-daydream.github.io/posts/a61e53f.html"/>
    <id>https://starlike-daydream.github.io/posts/a61e53f.html</id>
    <published>2024-04-24T05:24:29.000Z</published>
    <updated>2024-04-24T05:42:43.237Z</updated>
    
    <content type="html"><![CDATA[<h3 id="本周学习大纲">本周学习大纲</h3><ol><li><strong>大体是刷题</strong></li></ol><h3 id="本周学习日历">本周学习日历</h3><table><thead><tr><th>日历</th><th>学习内容</th><th>其他</th></tr></thead><tbody><tr><td>星期一</td><td>尝试写Java基于知识图谱的问答接口，提交服创文档</td><td></td></tr><tr><td>星期二</td><td>粗略了解Python统计建模，了解Stata的基本使用，有序probit模型和熵值法</td><td></td></tr><tr><td>星期三</td><td>PTA刷题23真题和23模拟L2-3，了解C++捕获异常和删除vector中的指定元素，了解到iostream头文件也可以使用printf等C风格输入输出，C++重写2020模拟L–8阅览室并了解到删除map的元素</td><td></td></tr><tr><td>星期四</td><td>跟任康学习发推文，刷题，学习前缀和和差分，教任康便捷的使用图床</td><td>完成互联网+任务</td></tr><tr><td>星期五</td><td>学习双指针，去重排序，计数排序，重载运算符按指定规则排序，刷天梯赛23真题，了解到字符串转化列表的方式在字符串某一位置进行插入</td><td></td></tr><tr><td>星期六</td><td>刷题，翻看之前写的代码，翻阅STL，天梯赛正式比赛，搞清楚比赛时用错的binary_search方法，根据之前学习的前缀和算法AC洛谷P2367，了解min和max方法</td><td></td></tr><tr><td>星期天</td><td>，重做帮助色盲，九宫格，懂蛇语（但没A），了解C++分割字符串和字符转字符串但没完全明白</td><td></td></tr></tbody></table><h3 id="本周学习内容及收获">本周学习内容及收获</h3><h4 id="算法学习">算法学习</h4><h5 id="笔记：">笔记：</h5><p>第一课： <a href="https://www.mubu.com/doc/xB_eggXfVh">https://www.mubu.com/doc/xB_eggXfVh</a><br>第二课（未看完）： <a href="https://www.mubu.com/doc/1IuNBGLKqqh">https://www.mubu.com/doc/1IuNBGLKqqh</a></p><h5 id="完成状态：">完成状态：</h5><p>基本完成本周任务。</p><h5 id="学习内容：">学习内容：</h5><p>见表格</p><h5 id="学习收获">学习收获</h5><p>比赛还是得用本地IDE好一点，老是拼错</p><h3 id="下周学习大纲">下周学习大纲</h3><ol><li><p><strong>Stata</strong></p></li><li><p><strong>算法+JSCPC准备</strong></p></li></ol>]]></content>
    
    
    <summary type="html">星辰大海组组长曹光由2024年4月15日-2024年4月21日周报</summary>
    
    
    
    <category term="周报" scheme="https://starlike-daydream.github.io/categories/%E5%91%A8%E6%8A%A5/"/>
    
    
    <category term="学习记录" scheme="https://starlike-daydream.github.io/tags/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    <category term="小组周报" scheme="https://starlike-daydream.github.io/tags/%E5%B0%8F%E7%BB%84%E5%91%A8%E6%8A%A5/"/>
    
  </entry>
  
  <entry>
    <title>星辰大海组周报</title>
    <link href="https://starlike-daydream.github.io/posts/2013454d.html"/>
    <id>https://starlike-daydream.github.io/posts/2013454d.html</id>
    <published>2023-12-18T14:01:19.000Z</published>
    <updated>2024-04-27T06:46:46.420Z</updated>
    
    <content type="html"><![CDATA[<h1>星辰大海组周报</h1><table><thead><tr><th style="text-align:center">组员姓名</th><th style="text-align:center">周报网址</th></tr></thead><tbody><tr><td style="text-align:center">曾馨岚</td><td style="text-align:center"><a href="https://mysophia.github.io/">https://mysophia.github.io/</a></td></tr><tr><td style="text-align:center">纪星呈</td><td style="text-align:center"><a href="https://yousiming.github.io/">Hexo (yousiming.github.io)</a></td></tr><tr><td style="text-align:center">董杨凌云</td><td style="text-align:center"><a href="https://modetou.github.io/">https://modetou.github.io/</a></td></tr><tr><td style="text-align:center"><s>戴巧甜</s></td><td style="text-align:center"><s><a href="https://daichocolate.github.io/">https://daichocolate.github.io/</a></s></td></tr></tbody></table><!-- $y=\sum\limits_{i=1}^{2}x_i$ -->]]></content>
    
    
    <summary type="html">属于701工作坊组织的星辰大海小组周报</summary>
    
    
    
    
    <category term="小组周报" scheme="https://starlike-daydream.github.io/tags/%E5%B0%8F%E7%BB%84%E5%91%A8%E6%8A%A5/"/>
    
  </entry>
  
  <entry>
    <title>搭建个人博客</title>
    <link href="https://starlike-daydream.github.io/posts/c442673f.html"/>
    <id>https://starlike-daydream.github.io/posts/c442673f.html</id>
    <published>2023-12-17T07:15:29.000Z</published>
    <updated>2024-04-24T05:47:46.611Z</updated>
    
    <content type="html"><![CDATA[<h1>一、前置知识</h1><ul><li><p>本文档参考博客文章：<a href="http://t.csdnimg.cn/XiZky">http://t.csdnimg.cn/XiZky</a></p></li><li><p>幕布文档的基本操作：（推荐用浏览器打开本文档链接，而不是用微信，手机端显示也会有问题），访问链接：<a href="https://www.mubu.com/doc/5OeZGO2XKgh">https://www.mubu.com/doc/5OeZGO2XKgh</a></p><ul><li><p>每个小圆点都是一个主题，如果这个主题有子主题（会有半透明外圆环），那鼠标放在这个主题的左边就能看到小三角形，点击小三角形就可以展开。收缩这部分的主题</p></li><li><p>如果点击小圆点就会进入这个主题，只展示这个主题的部分，可以在右上角点击它的父级主题返回到之前的主题</p></li><li><p>文档里的网址链接单击即可打开，可能有些是国外网站，访问比较慢，如果下载node.js或者Git遇到问题，可以到我的Gitee下载安装<a href="https://gitee.com/starlike_daydream/installer">Installer: 国外的软件可能会下载较慢，为了方便下载，放了一些软件的安装包 (gitee.com)</a>（就是要注册一个Gitte）</p><ul><li>这里以Git为例，先点进去对应安装包，再点击右方的原始数据即可<img src="https://api2.mubu.com/v3/document_image/deabd45e-e2ad-448b-8f61-3a85274eac16-8085313.jpg" alt="img"><img src="https://api2.mubu.com/v3/document_image/7d78a007-3041-439c-bc10-9cf85402fde9-8085313.jpg" alt="img"></li></ul></li></ul></li><li><p>命令行的操作：后面的命令都是在命令行(cmd)或者类似命令行(Git Bash)的界面运行</p><ul><li><p>打开命令行：win+R打开运行，输入cmd打开</p></li><li><p>cls : 清空屏幕</p></li><li><p>cd 目录: 更改当前所在目录</p></li><li><p>cd 当前目录的子文件夹：进入到子文件夹（）</p></li><li><p>rd… : 返回上一级目录</p></li><li><p>exit : 退出命令行</p></li><li><p>rd\ : 返回根目录</p></li><li><p>D:    : 盘名加冒号切盘(无需回到根目录)</p></li><li><p>dir : 显示该目录下的文件</p></li><li><p>上下方向键回溯历史命令</p></li></ul></li><li><p>Markdown文件（后缀是md的文件）的编写：推荐使用Typora，不需要记忆语法格式了，ctrl+/也可以查看源代码，其它软件编辑也可以</p></li><li><pre><code>注意点：四个空格会生成代码块，n个井号#代表n级标题，-中划线代表无序标题，后面要有空格</code></pre></li><li><p>浏览器展示的页面文件–html文件：我们md文档将会生成html文件用于在浏览器展示。</p><ul><li>这部分由于只给浏览页面的用户看，我们也称之为前端，这个个人博客的搭建只涉及一点前端的知识</li></ul></li></ul><h1>二、下载生成个人博客所需要的软件/环境</h1><h2 id="1-Git：（第三部分会用到）">1.Git：（第三部分会用到）</h2><ul><li><p>简介：分布式版本控制系统，用于上传代码/文件（这里会用到）和记录代码/文件的历史版本，合并文件改动，团队项目必备工具（详见<a href="https://www.liaoxuefeng.com/wiki/896043488029600">Git教程 - 廖雪峰的官方网站</a>）。</p><ul><li><p>官网安装：<a href="https://git-scm.com/download">Git - Downloads (git-scm.com)</a>，找到download下载（应该在左上角），若要选择版本，选择上面的64位版本（与电脑系统对应的版本）</p></li><li><p>1（64位windows版安装图示）<img src="https://api2.mubu.com/v3/document_image/01386042-507a-4a5a-b8ed-b0701631839f-8085313.jpg" alt="img"></p></li><li><p>2<img src="https://api2.mubu.com/v3/document_image/55c37faf-b396-48c5-8359-ae3e7f88c430-8085313.jpg" alt="img"></p><ul><li><p>官网下载慢的话可以用我的下载链接：<a href="https://gitee.com/starlike_daydream/installer/raw/master/Git-2.43.0-64-bit.exe">https://gitee.com/starlike_daydream/installer/raw/master/Git-2.43.0-64-bit.exe</a></p></li><li><p>如果下载的文件没有后缀名，在文件名后面加上.exe扩展名就可以安装了</p></li><li><p>检测是否安装成功：git --version，出现对应版本号即代表安装成功</p></li><li><p>后面的命令可以在Git Bash执行（在任意文件目录右击空白处选择Open Git Bash Here，没有的话就选择更多选项（win11）），也可以win+R打开运行输入cmd，在命令行运行。</p></li></ul></li><li><p>如果遇到执行不成功的情况，可以尝试用管理员身份运行Git Bash/cmd</p></li></ul></li></ul><h2 id="2-node-js：Node-js-中文网-nodejs-cn-安装，进去后点击下载安装，选择长期支持版即可">2.node.js：<a href="https://nodejs.cn/">Node.js 中文网 (nodejs.cn)</a>安装，进去后点击下载安装，选择长期支持版即可</h2><ul><li><p>官网下载慢的话可以用我的下载链接：<a href="https://gitee.com/starlike_daydream/installer/raw/master/node-v18.18.0-x64.msi">https://gitee.com/starlike_daydream/installer/raw/master/node-v18.18.0-x64.msi</a></p></li><li><p>官网安装图示（windows64位版）</p><ul><li><p>1.<img src="https://api2.mubu.com/v3/document_image/1d31654f-cb30-4f83-9136-bedfbb0297d4-8085313.jpg" alt="img"></p></li><li><p>2.<img src="https://api2.mubu.com/v3/document_image/744e3f27-ae77-459b-bf75-42acf396f7d2-8085313.jpg" alt="img"></p><ul><li><p>简介：Node.js 是基于 <a href="https://v8.dev/">V8 JavaScript 引擎</a> 构建的 JavaScript 运行时，可以用它搭建本地服务器，这里我们需要用到它的npm命令</p></li><li><p>检测是否安装成功：命令行运行node -v和npm -v（注意中间要有空格），出现对应版本号即代表安装成功</p></li><li><p>添加国内镜像加快下载速度：运行命令npm config set registry <a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a>（如果还是下载缓慢或者失败可以切换其他镜像源）</p></li></ul></li><li><p>查看自己当前的镜像：运行命令：npm get registry</p></li><li><p>切换加速镜像源（推荐）：运行命令：npm config set registry <a href="https://registry.npmmirror.com/">https://registry.npmmirror.com</a></p></li><li><p>切回官方镜像：运行命令：npm config set registry <a href="http://www.npmjs.org/">http://www.npmjs.org</a></p></li><li><p>其他国内镜像源：<a href="https://blog.csdn.net/qq_43940789/article/details/131449710">国内npm源镜像（npm加速下载） 指定npm镜像_npm 国内镜像-CSDN博客</a></p></li><li><p>如果说切换镜像还是不行，可以尝试取消代理，或者降低npm的版本，在尝试上面的步骤</p><ul><li><p>npm config set proxy null                // proxy:外部请求的代理</p></li><li><p>npm config set https-proxy null              // https-proxy:用于代理https请求的</p></li><li><p>npm install npm@6.4.1 -g            用于降低npm版本</p></li><li><p>安装好node.js之后就可以用npm命令下载安装hexo了</p></li></ul></li></ul></li></ul><h2 id="3-Hexo的安装与配置：">3.Hexo的安装与配置：</h2><ul><li><p>简介：一个基于node.js的帮我们写好的博客框架，用了它，我们只需要修改部分内容，就能获得只属于自己的个人博客，并编写文章上传了</p><ul><li><p>(1)创建一个文件夹MyBlog，以后在这个文件夹操作，存放项目文件以及博客文章</p></li><li><p>(2)运行命令：npm install -g hexo-cli：安装hexo</p></li><li><p>(3)运行命令：hexo v：查看是否安装成功，出现对应版本号即代表安装成功</p></li><li><p>(4)运行命令：hexo init：在当前目录（博客文件夹目录，而且必须为空目录）初始化一个使用hexo框架的项目（默认）</p></li><li><p>(5)运行命令：hexo generate：生成项目</p></li><li><p>(6)运行命令：hexo s/hexo server：启动本地服务器，按Ctrl键点击链接即可用默认浏览器访问，用按Ctrl+C停止运行</p></li><li><p>但只有本机能访问，想要在互联网上也能访问就需要下面的步骤</p></li></ul></li></ul><h1>三、使用GitHub提供的免费服务器</h1><ul><li>GitHub简介：一个项目开放源代码的国外的代码托管平台，我们将用这里的GitHub仓库的Pages功能使用GitHub为我们提供的个人服务器</li></ul><h2 id="1-注册github账号（https-github-com-），并创建一个仓库（默认选项创建就行）–-仓库名格式要求：你的GitHub用户名-github-io">1.注册github账号（<a href="https://github.com/">https://github.com/</a>），并创建一个仓库（默认选项创建就行）–&gt;仓库名格式要求：你的GitHub用户名.<a href="http://github.io/">github.io</a></h2><ul><li><p>我的用户名是Cesteo，创建的仓库名就叫<a href="http://cesteo.github.io/">Cesteo.github.io</a><img src="https://api2.mubu.com/v3/document_image/d83f4829-d7a4-4833-ba7e-8d78d46ae93f-8085313.jpg" alt="img"></p><ul><li>如果注册过程遇到问题，可以参考这篇博客的教程：<a href="http://t.csdnimg.cn/IKe0L">http://t.csdnimg.cn/IKe0L</a></li></ul></li></ul><h2 id="2-初始化Git的用户名和邮箱（加–global是为所有git项目设置，不加则是在当前目录的git项目设置）">2.初始化Git的用户名和邮箱（加–global是为所有git项目设置，不加则是在当前目录的git项目设置）</h2><ul><li><p>注意：这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。</p></li><li><p>(1)初始化用户名–运行命令：git config --global <a href="http://user.name/">user.name</a>  “yourname”（注意<a href="http://user.name/email">user.name/email</a>和英文双引号&quot;之间要有一个空格）</p><ul><li><p>(2)初始化邮箱–运行命令：git config --global user.email  “youremail”</p></li><li><p>(3)确认设置用户名和邮箱成功：执行以下命令</p></li><li><p>用户名：git config --global <a href="http://user.name/">user.name</a></p></li><li><p>邮箱：git config --global user.email</p></li></ul></li></ul><h2 id="3-ssh连接：只有连接成才能上传代码">3.ssh连接：只有连接成才能上传代码</h2><ul><li><p>(1)下载github部署插件：运行命令：npm install hexo-deployer-git --save</p><ul><li><p>本地生成获取ssh密钥</p></li><li><p>(2)生成密钥：运行命令：ssh-keygen -t rsa -C “youremail”（这里改为自己的邮箱），可能要一路回车</p></li><li><p>(3)获取密钥：在Git Bash运行命令cat ~/.ssh/id_rsa.pub，然后复制这行命令运行的结果</p><ul><li>github创建ssh密钥</li></ul></li><li><p>(4)打开<a href="http://github.com/">github</a>，在右上角的头像下面点击settings，再点击SSH and GPG keys，新建一个SSH，名字随便取一个都可以，把你的id_rsa.pub里面的信息复制进去，点击create/创建即可完成创建</p><ul><li>(5)验证ssh连接是否成功：ssh -T <a href="mailto:git@github.com">git@github.com</a>，出现用户名，即代表访问成功</li></ul></li></ul></li><li><p>ssh连接我遇到的问题</p><ul><li><p>ssh连接除了好几次错误：先是22端口拒绝连接，然后我去搜，最后发现电脑只有ssh客户端，没有ssh服务器，然后下了似乎又说真实性，yes/no什么的，这里又搜了一下，是要输yes，我的443端口没问题，不是防火墙的原因，好像少了一个kown_hosts文件</p></li><li><p>类似下图的错误，反正yes着yes着的、差不多就好了<img src="https://api2.mubu.com/v3/document_image/dfd0e086-ad97-40e6-99d8-638d6a486aab-8085313.jpg" alt="img"></p></li></ul></li></ul><h2 id="4-更改配置文件">4.更改配置文件</h2><ul><li><p>生产的博客项目根目录下的_config.yml中的url，url是Pages生成的网站网址，可以第六步再配置，deploy下的repository 要配置成自己的仓库地址（记得文件要保存，如果编辑器窗口顶部的文件名前面有个星号*，那就说明话没有保存）</p></li><li><p>我的配置：<img src="https://api2.mubu.com/v3/document_image/2549dbeb-1f10-440d-990f-3491b9e6ba0f-8085313.jpg" alt="img"><img src="https://api2.mubu.com/v3/document_image/74beb929-8058-4a36-924a-e366c7d71fc7-8085313.jpg" alt="img"></p><ul><li><p>deploy的repository填deploy</p></li><li><p>特别注意这里还有个坑：修改代码时候注意空格，例如 repo： 后面都是有空格的，删除空格之后，后面运行的时候就会报错，这是编码的规定，还有就是deploy一定从行首开始写，不要加空格，注意格式</p></li></ul></li></ul><h2 id="5-使用hexo的常用命令来生成网页：">5.使用hexo的常用命令来生成网页：</h2><ul><li><p>(1)清除之前生成的项目–hexo clean（可以清除之前项目的一些问题）</p><ul><li><p>(2)在本地生成项目–hexo g（缩写）/hexo generate</p></li><li><p>(3)把项目部署到GitHub上–hexo d（缩写）/hexo deploy</p></li><li><p>这里会让你登录GitHub</p></li><li><p>如果在GitHub创建了token，就需要在生成token时勾选repo下面这些权限</p><ul><li><img src="https://api2.mubu.com/v3/document_image/3b120d90-9dc8-4523-aac0-260e2c46c750-8085313.jpg" alt="img"></li></ul></li><li><p>如果访问Github慢，部署失败的问题，可以在hosts文件（位于C:\Windows\System32\drivers\etc）添加我的hosts（<a href="https://gitee.com/starlike_daydream/installer/blob/master/hosts">hosts · starlike_daydream/Installer - 码云 - 开源中国 (gitee.com)</a>）的51-82行到你的hosts里</p></li><li><p>Github加速器：<a href="https://steampp.net/">下载链接</a>（最好只用于访问，建立ssh连接可能会有问题，本人亲身尝试）</p></li><li><p>更改hosts文件：<a href="https://developer.aliyun.com/article/1077240">https://developer.aliyun.com/article/1077240</a></p><ul><li>(4)上传一个帖子/笔记：hexo new post “文件名”（这个文件就是md文档，内容将在这里编写）（位于生成的博客目录-&gt;source-&gt;_post）</li></ul></li></ul></li><li><p>(5)生成网页的连接的位置：</p><ul><li>你创建的仓库repository–&gt;上方菜单栏Settings–&gt;左方菜单栏Pages–&gt;Source选择：Deploy from a branch–&gt;Branch选择：master，folder选择root–&gt;点击save过一会刷新应该就会生成<img src="https://api2.mubu.com/v3/document_image/1a95c305-fb90-4129-97fc-a67a2b8515e6-8085313.jpg" alt="img"></li></ul></li></ul><h2 id="6一般的使用步骤：">6一般的使用步骤：</h2><ul><li>编写md文档，hexo g+hexo d生成部署项目，等到GitHub的项目右上角的小圆点标识变绿（再顶部的菜单Action点击一个上传操作即可查看详细过程）即可刷新博客网页，查看生成并部署好的在线网页</li></ul><h2 id="7配置个人信息：">7配置个人信息：</h2><ul><li>在文件根目录下的_config.yml，就是整个hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的<a href="https://hexo.io/zh-cn/docs/configuration">配置描述</a>。<img src="https://api2.mubu.com/v3/document_image/f35fd56f-7670-4c59-b9a8-84d234d543ee-8085313.jpg" alt="img"></li></ul><h1>4、后续：个人博客还有很多炫酷的，有意思的功能，大家可以自行探索</h1><ul><li><p>切换主题</p><ul><li>我使用的是这篇博客的主题：<a href="https://github.com/blinkfox/hexo-theme-matery">https://github.com/blinkfox/hexo-theme-matery</a></li></ul></li><li><p>增加功能:可参考主题的readme文档</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;一、前置知识&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;本文档参考博客文章：&lt;a href=&quot;http://t.csdnimg.cn/XiZky&quot;&gt;http://t.csdnimg.cn/XiZky&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;幕布文档的基本操作：（推荐用浏览器</summary>
      
    
    
    
    <category term="Computer Learning" scheme="https://starlike-daydream.github.io/categories/Computer-Learning/"/>
    
    
    <category term="Blog" scheme="https://starlike-daydream.github.io/tags/Blog/"/>
    
    <category term="Building" scheme="https://starlike-daydream.github.io/tags/Building/"/>
    
  </entry>
  
</feed>
